digraph {
    layout = fdp;
    label = "凡例 [2020.4.2]";
    node [shape = box,style = filled,fillcolor = lightgoldenrod];

    usecase [label = "ユースケース", shape = ellipse];
    handlerMethod [label = "ハンドラとなる\nユースケース", fillcolor = greenyellow, shape = ellipse];
    nonPublicUsecase [label = "パブリックでない\nユースケース", fillcolor = black, style = solid, shape = ellipse];
    lambda [label = "ラムダ", shape = ellipse, fillcolor = gray];

    screen [label = "画面", shape = Msquare, style = filled, fillcolor = lightgray];

    {
    screen -> usecase [style = dotted,arrowhead = open];
    usecase -> returnModel [style = bold,arrowhead = none];
    usecase -> requireModel [style = dashed,arrowhead = open];
    usecase -> usingModel [style = dotted,arrowhead = open];
    }
    returnModel [label = "戻り値型", style = solid, fillcolor = whitesmoke]
    requireModel [label = "引数型", style = solid, fillcolor = whitesmoke]
    usingModel [label = "使用する型", style = solid, fillcolor = whitesmoke]

    model [label = "一般的なモデル"];
    other1 [label = "主要でないモデル", style = solid, fillcolor = whitesmoke];
    other2 [label = "もっと主要でないモデル", style = dashed, fillcolor = whitesmoke];

    {
    # 出力上近くに置くための関連
    edge [color = none,arrowhead = none];

    model -> other1;
    model -> other2;
    other1 -> other2;
    }
}