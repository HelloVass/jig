plugins {
    id 'org.springframework.boot' version '2.0.0.RELEASE' apply false
    id 'com.gradle.plugin-publish' version '0.9.10' apply false
}

repositories {
    jcenter()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    version = '2018.4.4'
    group = 'org.dddjava.jig'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    repositories {
        jcenter()
    }

    dependencies {
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
        testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
        testCompile 'org.assertj:assertj-core:3.9.1'
        testCompile 'org.mockito:mockito-core'

        testCompile('org.springframework:spring-test') {
            exclude group: 'junit'
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

    jar {
        metaInf { from(rootDir) { include 'LICENSE' } }
    }
}

project(':jig-core') {
    apply plugin: 'maven-publish'

    ext {
        artifactId = 'jig-core'
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.artifactId
                version project.version
                from components.java
            }
        }
    }

    dependencies {
        compile 'org.springframework:spring-context'
        compile 'org.slf4j:slf4j-api'
        compile 'ch.qos.logback:logback-classic'

        // class解析
        compile 'org.ow2.asm:asm:6.1'
        // datasource解析
        compile 'org.mybatis:mybatis:3.4.5'
        // javadocコメント取得
        compile 'com.github.javaparser:javaparser-core:3.5.6'
        compile 'com.github.javaparser:java-symbol-solver-core:0.6.3'
        // excel出力
        compile 'org.apache.poi:poi:3.17'
        compile 'org.apache.poi:poi-ooxml:3.17'
        // ダイアグラム出力
        compile 'guru.nidi:graphviz-java:0.4.0'
    }

    build.dependsOn(publishToMavenLocal)
}

project(':jig-cli') {
    apply plugin: 'org.springframework.boot'
    dependencies {
        compile project(':jig-core')
        compile 'org.springframework.boot:spring-boot-starter'
    }
    bootJar {
        metaInf { from(rootDir) { include 'LICENSE' } }
        archiveName 'jig-cli.jar'
    }
}

project(':jig-gradle-plugin') {
    apply plugin: "java-gradle-plugin"
    apply plugin: 'com.gradle.plugin-publish'
    apply plugin: 'maven-publish'

    repositories {
        jcenter()
        mavenLocal()
    }

    dependencies {
        compile 'org.dddjava.jig:jig-core:2018.4.4.0'
        compile gradleApi()
        compile localGroovy()
    }

    jar {
        baseName = 'jig-gradle-plugin'
    }

    ext {
        artifactId = 'jig-gradle-plugin'
    }

    gradlePlugin {
        plugins {
            jigGradlePlugin {
                id = project.artifactId
                implementationClass = 'org.dddjava.jig.gradle.JigGradlePlugin'
            }
        }
    }

    pluginBundle {
        website = 'http://www.gradle.org/'
        vcsUrl = 'https://github.com/gradle/gradle'
        description = 'Visualizing code for DDD'
        tags = ['ddd', 'plugin', 'visualize']

        plugins {
            jigGradlePlugin {
                id = project.artifactId
                displayName = 'Jig Gradle Plugin'
            }
        }
    }

    publishing {
        publications {
            puluginPublication(MavenPublication) {
                groupId project.group
                artifactId project.artifactId
                version project.version
                from components.java
            }
        }
    }


}
