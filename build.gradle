plugins {
    id 'org.springframework.boot' version '2.0.0.RELEASE' apply false
    id "eu.appsatori.fatjar" version "0.3" apply false
}


repositories {
    jcenter()
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    def defaultEncoding = 'UTF-8'
    tasks.withType(AbstractCompile).each { it.options.encoding = defaultEncoding }

    repositories {
        jcenter()
    }

    dependencies {
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
        testCompile 'org.junit.jupiter:junit-jupiter-params:5.1.0'
        testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
        testCompile 'org.assertj:assertj-core:3.9.1'
        testCompile 'org.mockito:mockito-core'

        testCompile('org.springframework:spring-test') {
            exclude group: 'junit'
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }
}

project(':jig-core') {
    dependencies {
        compile 'org.springframework:spring-context'
        compile 'org.slf4j:slf4j-api'
        compile 'ch.qos.logback:logback-classic'

        compile 'org.ow2.asm:asm:6.1'

        compile 'org.mybatis:mybatis:3.4.5'

        compile 'com.github.javaparser:javaparser-core:3.5.6'
        compile 'com.github.javaparser:java-symbol-solver-core:0.6.3'
    }
}

project(':diagram-plantuml') {
    dependencies {
        compile 'org.springframework:spring-context'
        compile 'net.sourceforge.plantuml:plantuml:8059'
        compile project(':jig-core')
    }
}

project(':diagram-graphviz-java') {
    dependencies {
        compile 'guru.nidi:graphviz-java:0.4.0'
        compile project(':jig-core')
    }
}

project(':package-diagram-cli') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile project(':jig-core')
        compile project(':diagram-plantuml')
        compile project(':diagram-graphviz-java')
        compile 'org.springframework.boot:spring-boot-starter'
    }
}

project(':class-list-cli') {
    apply plugin: 'org.springframework.boot'

    dependencies {
        compile project(':jig-core')
        compile project(':class-list-format')
        compile 'org.springframework.boot:spring-boot-starter'
    }
}

project(':class-list-format') {
    dependencies {
        compile project(':jig-core')
        compile 'org.apache.poi:poi:3.17'
        compile 'org.apache.poi:poi-ooxml:3.17'
    }
}

project(':gradle-plugin') {
    apply plugin: "java-gradle-plugin"
    apply plugin: "eu.appsatori.fatjar"
    gradlePlugin {
        plugins {
            jigGradlePlugin {
                id = 'com.github.irof.Jig'
                implementationClass = 'jig.gradle.JigGradlePlugin'
            }
        }
    }

    repositories {
        jcenter()
    }
    dependencies {
        compile project(':jig-core')
        compile project(':class-list-format')
        compile project(':diagram-plantuml')
        compile gradleApi()
        compile localGroovy()
    }

    jar {
        baseName = 'gradle-jig-plugin'
    }

    fatJar {
        baseName = 'gradle-jig-plugin-all'
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
        zip64 = true
    }
}
